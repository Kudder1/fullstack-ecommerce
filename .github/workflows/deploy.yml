name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Create .env file for production build
      - name: Create production .env
        run: |
          cd client
          echo "VITE_API_URL=https://${{ secrets.EC2_DOMAIN }}/api" > .env
          echo "VITE_SERVER_URL=https://${{ secrets.EC2_DOMAIN }}/" >> .env

      # Build React locally in GitHub Actions
      - name: Build React
        run: |
          cd client
          npm ci
          npm run build

      # Setup /var/www/myapp directory (one-time migration)
      - name: Setup new app directory
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Create directory if it doesn't exist
            sudo mkdir -p /var/www/myapp
            sudo chown -R ubuntu:ubuntu /var/www/myapp
            
            # One-time migration: move old app if it exists
            if [ -d ~/app ] && [ ! -f /var/www/myapp/.migrated ]; then
              echo "Migrating from ~/app to /var/www/myapp..."
              pm2 stop myapp || true
              pm2 delete myapp || true
              cp -r ~/app/* /var/www/myapp/ 2>/dev/null || true
              touch /var/www/myapp/.migrated
            fi

      # Copy ONLY dist contents to server/public
      - name: Copy frontend to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "client/dist/*"
          target: "/var/www/myapp/server/public"
          strip_components: 2
          overwrite: true

      # Copy backend to EC2
      - name: Copy backend to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "server/*"
          target: "/var/www/myapp"
          strip_components: 0
          overwrite: true
          exclude: |
            node_modules
            .env
            public

      # Install backend dependencies and restart Node on EC2
      - name: Restart backend
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /var/www/myapp/server
            npm ci
            pm2 describe myapp > /dev/null 2>&1 && pm2 restart myapp || pm2 start index.js --name "myapp"
            pm2 save

      # Invalidate CloudFront cache after successful deployment
      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/index.html" "/vite.svg" "/" \
            --region us-east-1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
