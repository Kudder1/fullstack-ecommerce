import { useEffect, useContext } from 'react';
import './Basket.css';
import { Context } from '../main';
import { getCart, updateCart } from '../http/cartAPI';
import { observer } from 'mobx-react-lite';

const formatPrice = (price) => {
  return new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: 'USD'
  }).format(price);
}

export const Basket = observer(() => {
  const { cart } = useContext(Context);

  const updateCartState = (data) => {
    cart.setCartItems(data.basket);
    cart.setTotalItems(data.totalItems);
    cart.setTotalPrice(data.totalPrice);
    cart.setItemCount(data.itemCount);
  };

  useEffect(() => {
    getCart().then(data => {
      updateCartState(data);
    });
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  const updateQuantity = async (id, newQuantity) => {
    const data = await updateCart(id, newQuantity);
    updateCartState(data);
  };

  const removeItem = async (id) => {
    const data = await updateCart(id, 0);
    updateCartState(data);
  };

  if (cart.cartItems.length === 0) {
    return (
      <div className="container">
        <div className="empty-cart">
          <div className="empty-cart-icon">üõí</div>
          <h2>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
          <p>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</p>
          <button className="btn btn-primary">
            –ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–∞–º
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="container">
      <div className="basket-page">
        <div className="row">
          {/* Cart Items */}
          <div className="col-lg-8">
            <div className="cart-section">
              <div className="cart-header">
                <h2>–ö–æ—Ä–∑–∏–Ω–∞</h2>
                {/* <button 
                  className="btn btn-link text-danger"
                  onClick={onClearCart}
                >
                  –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
                </button> */}
              </div>

              <div className="cart-items">
                {cart.cartItems.map((item) => (
                  <div key={item.device.id} className="cart-item">
                    <div className="item-image">
                      <img src={import.meta.env.VITE_SERVER_URL + item.device.img} alt={item.device.name} />
                      {/* {!item.device.inStock && (
                        <div className="out-of-stock-badge">–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏</div>
                      )} */}
                    </div>

                    <div className="item-details">
                      <h4 className="item-name">{item.device.name}</h4>
                      <p className="item-brand">{item.device.brand}</p>
                      {/* {!item.device.inStock && (
                        <p className="text-danger">–¢–æ–≤–∞—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</p>
                      )} */}
                    </div>

                    <div className="item-quantity">
                      <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</label>
                      <div className="quantity-controls">
                        <button
                          className="btn btn-outline-secondary btn-sm"
                          onClick={() => updateQuantity(item.device.id, item.quantity - 1)}
                          disabled={item.quantity <= 1}
                        >
                          ‚àí
                        </button>
                        <input
                          type="number"
                          className="form-control quantity-input"
                          value={item.quantity}
                          onChange={(e) => updateQuantity(item.device.id, parseInt(e.target.value) || 1)}
                          min="1"
                          max="99"
                        />
                        <button
                          className="btn btn-outline-secondary btn-sm"
                          onClick={() => updateQuantity(item.device.id, item.quantity + 1)}
                        >
                          +
                        </button>
                      </div>
                    </div>

                    <div className="item-price">
                      <div className="price-per-item">
                        {formatPrice(item.device.price)}
                      </div>
                      {item.quantity > 1 && (
                        <div className="total-per-item">
                          –ò—Ç–æ–≥–æ: {formatPrice(item.device.price * item.quantity)}
                        </div>
                      )}
                    </div>

                    <div className="item-actions">
                      <button
                        className="btn btn-link text-danger"
                        onClick={() => removeItem(item.device.id)}
                        title="–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä"
                      >
                        üóëÔ∏è
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* Order Summary */}
          <div className="col-lg-4">
            <div className="order-summary">
              <h3>–ò—Ç–æ–≥–æ –ø–æ –∑–∞–∫–∞–∑—É</h3>
              
              <div className="summary-line">
                <span>–¢–æ–≤–∞—Ä—ã ({cart.totalItems} —à—Ç.)</span>
                <span>{formatPrice(cart.totalPrice)}</span>
              </div>
              
              <div className="summary-total">
                <span>–ö –æ–ø–ª–∞—Ç–µ</span>
                <span>{formatPrice(cart.totalPrice)}</span>
              </div>

              <button className="btn btn-success btn-lg checkout-btn">
                –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
              </button>

              <div className="payment-methods">
                <h5>–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:</h5>
                <div className="payment-icons">
                  <span className="payment-icon">üí≥</span>
                  <span className="payment-icon">üè™</span>
                  <span className="payment-icon">üì±</span>
                </div>
              </div>

              <div className="security-notice">
                üîí –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
})

export default Basket;
